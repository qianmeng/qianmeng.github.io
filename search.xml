<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[itms-services协议，不通过AppStore，直接安装IOS应用程序]]></title>
      <url>http://qianmeng.github.io/2016/05/07/itms-services%E5%8D%8F%E8%AE%AE%EF%BC%8C%E4%B8%8D%E9%80%9A%E8%BF%87AppStore%EF%BC%8C%E7%9B%B4%E6%8E%A5%E5%AE%89%E8%A3%85IOS%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F/</url>
      <content type="html"><![CDATA[<p>最近开发的一个IOS项目需要不通过将APP发布到Appstore上直接安装到客户手机上，本来觉得苹果这么封闭的流程，应该不可以实现的吧，结果竟然还正能实现，这边主要是利用苹果自家的浏览器safari和itms-services协议，下面介绍下主要步骤和实现过程中遇到的问题。<br><a id="more"></a></p>
<blockquote>
<p>通过itms-services协议，可以通过safari浏览器直接在iOS设备上安装应用程序。利用这种方式，只要在内网布置一个服务器，测试人员只需要通过测试设备的safari浏览器访问特定的url既可以实现安装</p>
</blockquote>
<p>这边首先需要将项目打包成ipa文件和生成.plist文件。</p>
<p>####一、打包ipa和生成.plist文件具体步骤：<br>1、在苹果开发者后台生成签名文件，使用developer profile或者adhoc distribution profile这边注意不能使用distribution profile，因为这不是发布到Appstore。<br>2、生成archive，点击菜单栏product中的archive选项进行打包<br>3、在organizer中点击archive进行distribute，发布的过程中注意选择save for enterprise distribution，不然会失败，完成保存会生成俩文件 .ipa文件和 .plist文件。其中.ipa文件就是应用程序文件， .plist文件是苹果需要通过itms-services协议访问的文件。</p>
<p>下面是.plist文件的格式</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;  </span><br><span class="line">&lt;!DOCTYPE plist PUBLIC &quot;-//Apple//DTD PLIST 1.0//EN&quot; &quot;http://www.apple.com/DTDs/PropertyList-1.0.dtd&quot;&gt;  </span><br><span class="line">&lt;plist version=&quot;1.0&quot;&gt;  </span><br><span class="line">&lt;dict&gt;  </span><br><span class="line">    &lt;key&gt;items&lt;/key&gt;  </span><br><span class="line">    &lt;array&gt;  </span><br><span class="line">        &lt;dict&gt;  </span><br><span class="line">            &lt;key&gt;assets&lt;/key&gt;  </span><br><span class="line">            &lt;array&gt;  </span><br><span class="line">                &lt;dict&gt;  </span><br><span class="line">                    &lt;key&gt;kind&lt;/key&gt;  </span><br><span class="line">                    &lt;string&gt;software-package&lt;/string&gt;  </span><br><span class="line">                    &lt;key&gt;url&lt;/key&gt;  </span><br><span class="line">                    &lt;string&gt;http://218.94.107.227:8996/wJob/job.ipa&lt;/string&gt;  </span><br><span class="line">                &lt;/dict&gt;  </span><br><span class="line">            &lt;/array&gt;  </span><br><span class="line">            &lt;key&gt;metadata&lt;/key&gt;  </span><br><span class="line">            &lt;dict&gt;  </span><br><span class="line">                &lt;key&gt;bundle-identifier&lt;/key&gt;  </span><br><span class="line">                &lt;string&gt;com.qgbes.pjob&lt;/string&gt;  </span><br><span class="line">                &lt;key&gt;bundle-version&lt;/key&gt;  </span><br><span class="line">                &lt;string&gt;1.0.0&lt;/string&gt;  </span><br><span class="line">                &lt;key&gt;kind&lt;/key&gt;  </span><br><span class="line">                &lt;string&gt;software&lt;/string&gt;  </span><br><span class="line">                &lt;key&gt;title&lt;/key&gt;  </span><br><span class="line">                &lt;string&gt;测试APP免Appstore安装项目&lt;/string&gt;  </span><br><span class="line">            &lt;/dict&gt;  </span><br><span class="line">        &lt;/dict&gt;  </span><br><span class="line">    &lt;/array&gt;  </span><br><span class="line">&lt;/dict&gt;  </span><br><span class="line">&lt;/plist&gt;</span><br></pre></td></tr></table></figure>
<p>属性不多，不做具体解释，这边只关心一点</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;key&gt;url&lt;/key&gt;  </span><br><span class="line">&lt;string&gt;http://218.94.107.227:8996/wJob/job.ipa&lt;/string&gt;</span><br></pre></td></tr></table></figure>
<p>这边是我们生成的ipa文件存放的位置。</p>
<p>####二、现在万事俱备只欠东风啦，只需要客户端能够成功访问到我们生成的.plist文件即可。</p>
<p>本来觉得和ipa文件一样，放在服务器上是，访问一下就OK啦，结果发现，最新版本是不行的，之前确实可以通过http的方式进行访问plist文件进行安装，不过现在苹果规定必须以https的方式进行访问。</p>
<p>以https方式访问plist文件的解决方案</p>
<p>1、配置tomat支持https方式访问<br>2、利用dropbox分享外链进行访问原始文件<br>3、利用开源中国的git&amp;osc分享外链进行访问原始文件</p>
<p>说说三种方式，第一种方式：对于只使用http方式访问来配置的tomcat，本身来改配置代价高，而且没必要。<br>第二种方式：dropbox是国外的，而且是要翻墙的，也就是存在不稳定情况，不通用。<br>第三种方式：国内网站，简单，稳定</p>
<p>这边我们也就只是需要访问个文件，简单点就在git&amp;osc上放个文件，提供个文件链接就OK啦。</p>
<p><img src="http://img.blog.csdn.net/20150927190635246" alt="这里写图片描述"></p>
<p>OK，通过itms-services协议进行访问下载吧。</p>
<p>####三、打开客户端safari浏览器，输入</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">itms-services://?action=download-manifest&amp;url=‘plist文件地址’</span><br></pre></td></tr></table></figure>
<p>这样就结束啦，反正我这边是安装成功啦~~~</p>
<p>总结下注意点<br>1、签名要使用developer profile或者adhoc distribution profile,不能使用distribution profile<br>2、个人开发者证书只能在100个设备中实现无线安装<br>3、最新版ios设备支持https方式访问plist文件（ipa文件是可以通过http方式访问的）</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[我的第一篇博客]]></title>
      <url>http://qianmeng.github.io/2016/05/07/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/</url>
      <content type="html"><![CDATA[<p>好长时间没写过博客啦，对不起CSDN给的‘恒’标签啦，嘿嘿</p>
<p>现在项目前端框架在向Angularjs转变，但里面还是在继续使用JQuery，当然这样是肯定不合理的，搜了下相关说法，AngualrJs 是不建议和JQuery结合使用的（虽然Angularjs自带JQLite），但项目原因，暂时就是这俩东西结合使用，具体原因不讨论，只讨论结合存在的问题，我相信不只我们项目遇到这种情况的，存在这个问题的，大家一起讨论讨论<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&lt;!--more--&gt;</span><br><span class="line">首先现在要解决的主要问题：</span><br><span class="line"></span><br><span class="line">&gt; 使用JQuery的赋值方法对ng-model 所在input赋值是不起作用的</span><br><span class="line"></span><br><span class="line">之前也搜过类似的问题，结果大都是使用 ng-value ，ng-init，&#123;&#123; &#125;&#125; 等等，但这些都是只是针对静态值处理，一旦我需要使用JQuery对ng-model所在的input进行赋值，ng-model照样不会变化，后来解决Angularjs结合日期控件LayDate的处理方法时注意到了指令这个东西，顺带着又看到了N多指令解决JQuery插件和Angularjs结合使用的例子，后来才发现指令的向ng-model、ng-value这都属于基本指令，其他的指令只是自定义罢了，学习不深入真可怕~~~通过这些主要是想说既然JQuery插件在赋值到input的时候都可以改变ng-model中的值，小小的hidden又有什么，于是想自己写一个指令来实现，无意中就搜到的了相关代码</span><br><span class="line"></span><br><span class="line">```</span><br><span class="line">.directive(&apos;ngUpdateHidden&apos;,function() &#123;</span><br><span class="line">    return function(scope, el, attr) &#123;</span><br><span class="line">        var model = attr[&apos;ngModel&apos;];</span><br><span class="line">        scope.$watch(model, function(nv) &#123;</span><br><span class="line">            el.val(nv);</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">    &#125;;&#125;</span><br><span class="line">```</span><br><span class="line"></span><br><span class="line">不难看出，这是另一端，是Angularjs中model改变时，动态改变hidden中的值，正好相反，实现原理就是利用$watch监听model值的变化。虽然不是我想要的结果，但想一下，既然可以监听model的值，然后改变hidden的值，那我就实现监听hidden的值，然后去 改变model就是咯，监听dom元素改变的方法都是现成的onchange()嘛，刚想写，又搜到的相关代码</span><br><span class="line"></span><br><span class="line">```</span><br><span class="line">.directive(&apos;ngUpdateHidden&apos;, function () &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">        restrict: &apos;AE&apos;, //attribute or element</span><br><span class="line">        scope: &#123;&#125;,</span><br><span class="line">        replace: true,</span><br><span class="line">        require: &apos;ngModel&apos;,</span><br><span class="line">        link: function ($scope, elem, attr, ngModel) &#123;</span><br><span class="line">            $scope.$watch(ngModel, function (nv) &#123;</span><br><span class="line">                elem.val(nv);</span><br><span class="line">            &#125;);</span><br><span class="line">            elem.change(function () &#123; //bind the change event to hidden input</span><br><span class="line">                $scope.$apply(function () &#123;</span><br><span class="line">                    ngModel.$setViewValue(  elem.val());</span><br><span class="line">                &#125;);</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;)</span><br><span class="line">```</span><br><span class="line"></span><br><span class="line">以上就是我说的完美实现</span><br><span class="line"></span><br><span class="line">于是很开心，赶紧去尝试先:</span><br><span class="line"></span><br><span class="line">```</span><br><span class="line">&lt; input type=&quot;hidden&quot; id=&quot;userName&quot; ng-model=&quot;userName&quot; ng-update-hidden /&gt;</span><br><span class="line">```</span><br><span class="line"></span><br><span class="line">然后动态赋值:</span><br><span class="line"></span><br><span class="line">```</span><br><span class="line">$(&quot;#userName&quot;).val(&quot;qianmeng&quot;); </span><br><span class="line">```</span><br><span class="line"></span><br><span class="line">结果一脸懵逼</span><br></pre></td></tr></table></figure></p>
<blockquote>
<p>发现val()方法赋值，根本不会触发onchange()事件</p>
</blockquote>
<p>也就是说我只要赋值的时候让它触发change事件就结束啦：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(&quot;#userName&quot;).val(&quot;qianmeng&quot;).trigger(&quot;change&quot;);</span><br></pre></td></tr></table></figure>
<p>成功了~~~</p>
<p>但感觉这样并不通用，如果能直接val（””）不要处理额外的东西，岂不是更好，也就是说只要封装下JQuery赋值的时候自动调用下change事件就可以了</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">(function($) &#123;</span><br><span class="line">     $.fn.update = function(value)&#123;</span><br><span class="line">        $(this).each(function()&#123;</span><br><span class="line">            if(value!=this.value)&#123;</span><br><span class="line">                this.value = value;</span><br><span class="line">                this.onchange();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">     &#125;;</span><br><span class="line">&#125;)(jQuery);</span><br></pre></td></tr></table></figure>
<p>然后使用</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(&quot;#userName&quot;).update(&quot;qianmeng&quot;);</span><br></pre></td></tr></table></figure>
<p>这边只要使用封装后的update方法就可以实现了</p>
<p>总结，首先要写个指令，在数据变化时给ng-model赋值，然后俩种调用方式</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1、$(&quot;#userName&quot;).val(&quot;qianmeng&quot;).trigger(&quot;change&quot;);</span><br><span class="line">2、$(&quot;#userName&quot;).update(&quot;qianmeng&quot;);</span><br></pre></td></tr></table></figure>
<p>想了下，既然俩种方法都可以实现预期效果，但毕竟update函数是自己封装的，并不通用，所以还是有点倾向第一种方法</p>
]]></content>
    </entry>
    
  
  
    
    <entry>
      <title><![CDATA[关于]]></title>
      <url>http://qianmeng.github.io/about/index.html</url>
      <content type="html"><![CDATA[<p>大家好，我是XXX。欢迎来到我的个人技术博客。</p>
<p>这里用markdown写下你的简介，就跟平时写md一样就可以了。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[读书]]></title>
      <url>http://qianmeng.github.io/reading/index.html</url>
      <content type="html"></content>
    </entry>
    
    <entry>
      <title></title>
      <url>http://qianmeng.github.io/tags/index.html</url>
      <content type="html"></content>
    </entry>
    
  
</search>
